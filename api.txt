6723267a64c8a12cba444bbcd09cc55a





from kivy.app import App
from kivy.uix.screenmanager import ScreenManager , Screen
from kivy.clock import Clock
from kivy.uix.image import Image
from kivymd.uix.pickers import MDTimePicker
from datetime import datetime
import requests
from kivy.uix.dropdown import DropDown
from kivy.uix.button import Button

class SplashScreen(Screen):
    def on_enter(self):
        Clock.schedule_once(self.go_to_home, 3)

    def go_to_home(self, *args):
        self.manager.current = 'home'
    
class HomeScreen(Screen):
    def update_time(self, *args):
        self.ids.time_label.text = datetime.now().strftime("%H:%M:%S")
    
    def on_center(self):
        Clock.schedule_interval(self.update_time, 1)

class AlarmSettinngScreen(Screen):
    def show_time_picker(self):
        time_dialog = MDTimePicker()
        time_dialog.bind(time=self.get_alarm_time)
        time_dialog.open()
    
    def get_alarm_time(self, instance, time):
        self.ids.alarm_time.text = str(time)
    
class WeatherAlarmApp(App):
    def build(self):
        sm = ScreenManager()
        sm.add_widget(SplashScreen(name='splash'))
        sm.add_widget(HomeScreen(name='home'))
        sm.add_widget(AlarmSettinngScreen(name='alarm_setting'))
        return sm
    
if __name__ == 'main':
    WeatherAlarmApp().run()








<SplashScreen>:
    Image:
        source: 'wee.JPG'
        allow_stretch: True
        size_hint: 1, 1


<HomeScreen>:
    BoxLayout:
        orientation: 'vertical'
        Image:
            id: weather_image
            source: 'wee.JPG'  # Change this dynamically based on weather
            allow_stretch: True
            size_hint: 1, 0.5
        
        Label:
            id: current_time
            font_size: 48
            text: '00:00:00'


        Button:
            text: "Set Alarm"
            font_size: 24
            size_hint: 0.8, 0.2
            pos_hint: {"center_x": 0.5}
            on_release:
                app.root.current = 'alarm_setting'


<AlarmSettingScreen>:
    BoxLayout:
        orientation: 'vertical'


        Label:
            text: "Select Alarm Time:"
            font_size: 24


        Button:
            id: alarm_time
            text: "Pick a Time"
            font_size: 24
            on_release: root.show_time_picker()


        Label:
            text: "Set Weather Condition:"
            font_size: 24


        BoxLayout:
            orientation: 'horizontal'


            Label:
                text: "Ring the alarm if weather"


            Spinner:
                text: "is"
                values: ["is", "is not"]


            Spinner:
                text: "Clear"
                values: ["Clear", "Rain", "Snow", "Thunderstorm", "Clouds"]


        Button:
            text: "Pick up the clothes feature"
            font_size: 24
            size_hint: 0.8, 0.2
            pos_hint: {"center_x": 0.5}
            on_release: app.pick_up_clothes_feature()



